# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on Macos

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-12
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      
    steps:
    - name: Install Halibut
      run: brew install halibut
      
    - uses: actions/checkout@v3
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Get release version
      id: get-version
      run: |
        PUZZLES_VERSION=$(cat version.h | sed -nr "s/^.*Version ([a-f0-9.]+).*$/\1/p")
        echo "puzzles_version=$PUZZLES_VERSION" >> $GITHUB_OUTPUT

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Install Strip
      run: cmake --install build --prefix instdir --strip

    - name: Pack
      working-directory: instdir
      run: cmake -E tar cJfv ../macos-dist.tar.gz .

    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        path: ./macos-dist.tar.gz
        name: macos-dist.tar.gz

    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: macos-dist.tar.gz
        path: ./
        
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{ steps.get-version.outputs.puzzles_version }}"
        prerelease: false
        title: "Version ${{ steps.get-version.outputs.puzzles_version }}"
        files: |
          macos-dist.tar.gz
